jQuery(function() {
  const images = [
    '<%= image_url "site_header_images/Folsom/IMG_7786.jpg" %>',
    '<%= image_url "site_header_images/Folsom/IMG_7790.jpg" %>',
    '<%= image_url "site_header_images/Folsom/IMG_7792.jpg" %>',
    '<%= image_url "site_header_images/Sacramento/IMG_7840.jpg" %>',
    '<%= image_url "site_header_images/Sacramento/IMG_7839.jpg" %>',
    '<%= image_url "site_header_images/Sacramento/IMG_7827.jpg" %>'
  ]
  
  let image_to_download = 0;
  function incrementImageToDownload(){
    image_to_download = image_to_download + 1;
    if (image_to_download === images.length) {
      image_to_download = 0;
    }
  }
  const MIN_DISPLAY_TIME = 5000;
  /*
  * Preload an image if not cached, then call a callback function
  * @param {String} the image url
  * @param {Function} the callback function
  */
  function loadImg(url, fn, time_of_request_ms) {
    // console.log("Loading image: " + url);
    var img = new Image();
    img.onerror = function() { // If failed to load the image
      // console.log("Failed to download");
      incrementImageToDownload();
      loadImg(images[image_to_download], swap, Date.now());
    };
    img.onload = function() { // If loaded successfully
      // console.log("Done downloading");
      // setup a timeout to show the image that got downloaded
      // console.log("Time remaining before swap: " + (5000 - (Date.now() - time_of_request_ms)));
      setTimeout(() => {
        if (fn) fn(img, true);
        //On IE6, multiple frames in a image will fire the 'onload' event for multiple times. So set to null
        img.onload = null;
      }, MIN_DISPLAY_TIME - (Date.now() - time_of_request_ms));
    };
    img.src = url;
  }

  function swap(image) {
    $('#background_images').fadeOut(500, () => {
      // console.log("Showing image: " + image.src);
      $('#background_images').css('background-image', "url("+image.src+")");
      
      incrementImageToDownload();
      $('#background_images').fadeIn(1000, () => {
        loadImg(images[image_to_download], swap, Date.now());
      });
    });
  };

  function updateOrbitSize() {
    if ($('.orbit-container').length){
      $('.orbit-container').each(function(i, obj) {
        $(this).height($(this).width() * (320 / 570) + 39 + "px");
      });
    }
  };

  function updateBlueBar() {
    if ($('#blue_bar').length){
      // console.log("Updating blue bar");
      var bottom;
      $('#blue_bar').height($('#blue_bar').parent().height());
      bottom = $(window).height() - ($('#blue_bar').position().top + $('#blue_bar').outerHeight(true));
      $('#background_images').css({
        bottom: bottom + "px"
      });
    }
  };

  $(document).ready(function() {
    if ($('#background_images').length){
      // console.log("Start loading images");
      loadImg(images[image_to_download], swap, Date.now());
    }
    updateOrbitSize();
    setTimeout(updateBlueBar, 1000);
  });
  
  $(window).resize(function() {
    updateOrbitSize();
    updateBlueBar();
  });
});