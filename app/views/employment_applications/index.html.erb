<%= stylesheet_link_tag "FileSpecificCSS/employment_applications", :media => "all" %>

<h1>Employment Applications</h1>

<%= form_tag employment_applications_path, :method => 'get', :id => "applicant_search" do %>
    <% request.query_parameters.collect do |key, value| %>
        <%# make sure not to cache "name_search" param, since that will create a stale duplicate which messes up our Javascript %>
        <% if key != "name_search" %>
            <%= hidden_field_tag key, value %>
        <% end %>
    <% end %>
    <div class="row">  
        <div class="columns small-12" style="margin-bottom: 10px;">
            <%= text_field_tag :name_search, params[:name_search], placeholder: "Search for First or Last name", id: "name_search_field" %>
        </div>
        <%= submit_tag "Submit", hidden: true %>
    </div>    
<% end %>

<div class="row">
    <style>
        #interview_set_up_filter_button{
            font-size: 0.8rem;
            line-height: 0.9rem;
        }
    </style>
    <% EmploymentApplication::STATUS.each do |s| %>
        <div class="columns large-expand small-12 status-buttons">
            <div class="input-group">
                <% classes = "button expanded switch-button" %>
                <% button_text = s[0] + " (" + @counts["status_"+s[1].to_s].to_s + ")" %>
                <%# special behavior for the "New" button %>
                <% if s[1] == 0 %>
                    <% if !params.has_key?(:status) %>
                        <% classes += " success" %>
                        <%= link_to button_text, "javascript::void();", class: classes, id: "new_filter_button" %>
                    <% else %>
                        <%= link_to button_text, request.parameters.except(:status), class: classes, id: "new_filter_button" %>
                    <% end %>
                <% else %>
                    <% if params[:status] == s[1].to_s %>
                        <% classes += " success" %>
                    <% end %>
                    <%= link_to button_text, request.parameters.merge({status: s[1].to_s}), class: classes, id: s[0].gsub(" ", "_").downcase+"_filter_button" %>
                <% end %>
            </div>
        </div>
    <% end %>
</div>

<div class="row">
    <div class="columns large-expand small-12">
        <div class="input-group">
            <% classes = "button expanded switch-button" %>
            <% all_text = "All Locations (" + @counts["all"].to_s + ")" %>
            <% if params.has_key?(:location) %>
                <%= link_to all_text, request.parameters.except(:location), class: classes, id: "all_filter_button" %>
            <% else %>
                <% classes += " success" %>
                <%= link_to all_text, "javascript: void(0);", class: classes, id: "all_filter_button" %>
            <% end %>
        </div>
    </div>
    <% locations = [['Folsom', 'folsom'], ['Sacramento', 'sacramento']] %>
    <% locations.each do |loc| %>
        <div class="columns large-expand small-12">
            <div class="input-group">
                <% classes = "button expanded switch-button" %>
                <% if params.has_key?(:location) && params[:location] == loc[1] %>
                    <% classes += " success" %>
                <% end %>
                <%= link_to loc[0] +" (" + @counts[loc[1]].to_s + ")", request.parameters.merge({location: loc[1]}), class: classes, id: loc[1]+"_filter_button" %>
            </div>
        </div>
    <% end %>
</div>

<div class="row">
    <% departments = [['Gymnastics', 'gymnastics'], ['Dance', 'dance'], ['Swim', 'swim'], ['TAG', 'tag'], ['Hospitality', 'hospitality']] %>
    <% departments.each do |dep| %>
        <% classes = "button expanded switch-button" %>
        <% if params.has_key?(:department) && params[:department] == dep[1] %>
            <% classes += " success" %>
        <% end %>
        <div class="columns large-expand small-12">
            <div class="input-group">
                <% dep_text = dep[0] + " (" + @counts[dep[1].intern].to_s + ")" %>
                <% if params.has_key?(:department) && params[:department] == dep[1] %>
                    <%= link_to dep_text, request.parameters.except(:department), class: classes, id: dep[1]+"_filter_button" %>
                <% else %>
                    <%= link_to dep_text, request.parameters.merge({department: dep[1]}), class: classes, id: dep[1]+"_filter_button" %>
                <% end %>
            </div>
        </div>
    <% end %>
</div>

<div id="applicants">
    <%= render partial: 'applicants' %>
</div> 

<%= link_to 'New Employment application', new_employment_application_path %>
